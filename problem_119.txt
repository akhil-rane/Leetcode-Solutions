/*
Problem Description:
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?
*/
import java.util.ArrayList;
import java.util.List;

public class Solution {
	public List<Integer> getRow(int rowIndex) {
		List<Integer> list = new ArrayList<Integer>();
		int i=0,j,listlen;
		while(i<=rowIndex){
			list.add(0, 1);
			listlen=list.size()-1;
			for (j = 1; j < listlen; j++) {
				list.set(j,list.get(j)+list.get(j+1));				
			}
			i++;
		}
		return list;
	}
}