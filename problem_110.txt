/*
Problem Description:
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.
*/

public class Solution {
    public boolean isBalanced(TreeNode root) {
        if(isBal(root)==-1) return false;
        return true;
    }
    public int isBal(TreeNode root) {
        if(root==null) return 0;
        int rightHeight=isBal(root.right);
        int leftHeight=isBal(root.left);
        if(rightHeight==-1||leftHeight==-1||Math.abs(leftHeight-rightHeight)>1) return -1;
        else return Math.max(rightHeight,leftHeight)+1;
    }
}